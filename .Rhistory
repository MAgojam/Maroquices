pr=xr/(nR*n)
ci=0.95
p=(xc+xr)/(nD*n+nR*n)
xc=15
nD=18
s=20
nx=nD*n
pc=xc/(nx)
xr=1
nR=2
pr=xr/(nR*n)
alfa=0.05
ci=1-alfa
n=nD*n+nR*n
p=(xc+xr)/(n)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
pacman::p_load(knitr,kableExtra,extrafont,xkcd,tikzDevice,faux,tikzDevice,plyr,tigerstats,EnvStats)
options(scipen=999)
source("DrawProbNorm.R", local = knitr::knit_global())
xc=15
nD=18
s=20
nx=nD*s
pc=round(xc/(nx),3)
xr=1
nR=2
pr=xr/(nR*s)
alfa=0.05
ci=1-alfa
n=nD*s+nR*s
p=(xc+xr)/(n)
LIp=p-qnorm(1-alfa/2)*sqrt(p*(1-p)/n))
qnorm(1-alfa/2)
LIp=p-qnorm(1-alfa/2)|>round(3)*sqrt(p*(1-p)/n)
LIp=round(p-qnorm(1-alfa/2)|>round(3)*sqrt(p*(1-p)/n),3)
LSp=round(p+qnorm(1-alfa/2)|>round(3)*sqrt(p*(1-p)/n),3)
prop.test(x=xc+xr,n=n, p=0.5)
? prop.test
prop.test(x=xc+xr,n=n, p=0.5, correct=F)
prop.test(x=xc+xr,n=n, p=0.5, correct=F)
0.04-1.96*sqrt(0.04*(1-0.04)/400)
z=qnorm(1-alfa/2)|>round(3)
LIpW=1/(1+z^2/n)*(p+z^2/(2*n))-z/(1+z^2/n)*sqrt(p*(1-p)/n+z^2/(4*n^2))
qbeta(alfa/2,xc+xr,n-xc+xr+1)
LSpE <- qbeta(1-alfa/2,xc+xr+1,n-xc+xr)
LIpE <- qbeta(alfa/2,xc+xr,n-xc+xr+1)
binom.test((x=xc+xr,n=n, p=0.5)
binom.test(x=xc+xr,n=n, p=0.5)
ceiling(1.2)
.4*.6*(1.96/0.01)^2
.4*.6/(0.01/1.96)^2
.04*.06/(0.01/1.96)^2
.04*.96/(0.01/1.96)^2
0.04*.96/(0.01/1.96)^2
.04*.96*(1.96/0.01)^2
pacman::p_load(knitr,kableExtra,extrafont,xkcd,tikzDevice,faux,tikzDevice,plyr,tigerstats,EnvStats,PracTools)
nWilson(moe.sw=1,alpha=0.05,pU=p, e=0.01)
pacman::p_load(knitr,kableExtra,extrafont,xkcd,tikzDevice,faux,tikzDevice,plyr,tigerstats,EnvStats,PracTools)
pacman::p_load(knitr,kableExtra,extrafont,xkcd,tikzDevice,faux,tikzDevice,plyr,tigerstats,EnvStats,PracTools)
nWilson(moe.sw=1,alpha=0.05,pU=p, e=0.01)
nWilson(moe.sw=1,alpha=0.05,pU=p, e=e)
e=0.01
nWilson(moe.sw=1,alpha=0.05,pU=p, e=e)
qbinom(0.95,40, 20)
qbinom(0.95,20, 40)
qbinom(0.5,3, 10)
dbinom(3,10,0.5)
dbinom(0,40,0.025)
dbinom(20,40,0.5)
?dbinom
pbinom(20,40,0.5)
pbinom(20,40,0.9)
1-qbinom(0.025,0.39,1/40)
qbeta(0.025, 37, 463)
1-qinom(0.025, 37, 463)
1-qbinom(0.025, 37, 463)
1-qbinom(0.025, 37, 463,37/463)
1-qbinom(0.025, 37, 463,37/463)
1-qbinom(0.025, 463, 37/463)
1-qbinom(0.025, 463, 37/463)/463
qbinom(0.025, 463, 37/463)
qbinom(0.025, 463-1, 36/462)
qbinom(0.025, 463-1, 36/462)/463
pbeta(0.025, 5,10)
pbeta(0.5, 5,10)
1-pbinom(5,10,0.5)
1-pbinom(5-1,10-1,0.5)
pbeta(0.5, 5,10)
1-pbinom(4,9,0.5)
pbinom(4,9,0.5)
pbeta(0.025,1,40-1)
pbeta(0.025,1,40-1+1)
pbeta(0.025,1,40)
pbeta(0.975,2,39)
1-pbinom(0,39,0.025)
1-pbinom(1,39,0.975)
binom.test(1,40,0.5)
binom.test(1,40,0.5)
qbeta(0.025,1,39)
qbeta(0.975,2,39)
1-qbinom(0.025,0,1/40)
qbinom(0.025,0,1/40)
qbinom(0.025,0,1/39)
qbinom(0.975,0,1/39)
qbinom(0.025,0,1/40)
qbinom(0.025,0,0.1)
qbinom(1/40,0,0.025)
qbinom(0.025,40, 1/40)
qbinom(0.025,1, 1/40)
qbinom(0.025,0, 1/40)
qbeta(0.025,34,463)
qbeta(0.025,37,463)
binom.test(x=1, n=40, p=0.5)
qbeta(0.025,xr,nR*s-xr)
xr
nR*x
nR*s
qbeta(0.025,xr,nR*s)
qbeta(0.025,xr,nR*s-xr+1)
qbeta(0.925,xr+1,nR*s-xr)
qbeta(0.975,xr+1,nR*s-xr)
pbeta(0.1,37,463)
1-pbinom(0.1,37-1,500-1)
1-pbinom(37-1,500-1,0.1)
qbeta(.025,37,463)
1-qbinom(.025,36,499)
1-qbinom(.025,36,36/499)
1-qbinom(.975,36,36/499)
1-qbinom(.025,36,36/499)/500
1-qbinom(.025,36,36/499)/499
qbinom(.025,36,36/499)/499
qbinom(.025,36,36/499)
qbeta(0.025,xr,nR*s-xr+1)
1-qbinom(.025,xr-1,(xr-1)/(nR*s-1))
qbinom(.025,xr-1,(xr-1)/(nR*s-1))
qbinom(.25,xr-1,(xr-1)/(nR*s-1))
qbinom(.025,1,1/40)
qbinom(.975,1,1/40)
qbinom(.998,2,0.025)
qbinom(.998,10,0.025)
qbinom(.025,40,1/40)
qbinom(.025,39,1/40)
1-qbinom(0.025,36,36/463)
qbinom(0.025,36,36/463)
qbinom(0.025,36,0.1)
qbinom(0.025,36,0.1)/500
1-qbinom(0.025,36,0.1)/500
1-qbinom(0.025,36,0.1)/463
1-qbinom(0.025,37,0.1)/463
1-qbinom(0.025,37,0.1)/500
1-qbinom(0.025,33,0.1)/499
1-pbinom(36,499,0.1)
qbinom(.025,499,36/499)
qbinom(.025,499,36/499)/500
1-qbinom(.025,499,36/499)/500
qbinom(.025,499,36/500)/500
qbinom(.025,499,37/500)/500
qbinom(0.025,xR-1,xr/40)/40
qbinom(0.025,xr-1,xr/40)/40
qbinom(0.025,xr-1,xr/40)
qbinom(0.925,xr-1,xr/40)
qbinom(0.975,xr-1,xr/40)
qbinom(0.975,40-1,xr/40)
qbinom(0.975,40-1,xr/40)/40
#Exato
binom.test(x=1, n=40, p=0.5)
binom.test(x=1, n=40, p=0.5)
qbinom(0.025,40-1,xr/40)/40
qbinom(0.975,40-1,xr/40)/40
1-qbinom(0.975,40-1,xr/40)/40
qbinom(0.975,40,xr/40)/40
qbinom(0.975,40,0)/40
qbinom(0.975,40,1/39)/40
prop.test(x=r,n=nR*s, p=0.5, correct=F)
prop.test(x=xr,n=nR*s, p=0.5, correct=F)
#Exato
binom.test(x=1, n=40, p=0.5)
s=15
#Exato
binom.test(x=1, n=40, p=0.5)
#Exato
binom.test(x=xr, n=nR*s, p=0.5)
pbeta(0.1,5,5)
pbeta(0.5,5,5)
pbeta(0.2,5,5)
1-pbinom(4,9,0.2)
qbeta(0.25, 5,5)
qbinom(0.25, 5,5)
qbinom(0.25, 5,5/10)
options(jamovi_home="C:\\Program Files\\jamovi 2.3.18.0")
setwd('ICVARS')
setwd("D:/OneDrive - ISPA/ongoing/jamoviR")
setwd('ICVARS')
#install the module
jmvtools::install()
#install the module
jmvtools::install()
#install the module
jmvtools::install()
xc=15
nD=18
s=15
nx=nD*s
pc=round(xc/(nx),3)
xr=1
nR=2
pr=round(xr/(nR*s),3)
alfa=0.05
ci=1-alfa
n=nD*s+nR*s
p=round((xc+xr)/(n),3)
e=0.01
pbeta(0.1,xr,nR*s-xr)
1-pbinom(xr-1,nD*s-1,0.1)
1-pbinom(xr-1,nR*s-1,0.1)
qbeta(0.1,xr,nR*s)
qbinom(0.1,nR*s-1,(xr-1)/(nR*s-1))
qbinom(0.1,nR*s,(xr-1)/(nR*s-1))
qbinom(0.1,nR*s,(xr)/(nR*s))
qbinom(0.025,nR*s,(xr)/(nR*s))
qbinom(0.975,nR*s,(xr)/(nR*s))
qbeta(0.975,xr,nR*s)
qbinom(0.975,nR*s-1,(xr-1)/(nR*s-1))
qbinom(0.975,nR*s,(xr-1)/(nR*s-1))
qbinom(0.975,nR*s,(xr)/(nR*s))
qbinom(0.975,nR*s,(xr)/(nR*s))/(nR*s)
n <- seq(2,30)
sum(n)
alfa=0.1
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+2, ncol = 2)
alfa=0.1
n <- seq(2,10)
lims<- matrix(NA, nrow=sum(n)+2, ncol = 2)
r=1
for(n in 2:30){
for(y in 0:n){
lims[r,"LimInf"]=qbeta(alfa/2,y,n)
lima[r,"LimSup"]=qbeta(1-alfa/2,y,n)
r=r+1
}
}
alfa=0.1
n <- seq(2,10)
lims<- matrix(NA, nrow=sum(n)+2, ncol = 2)
r=1
for(n in 2:30){
for(y in 0:n){
lims[r,1]=qbeta(alfa/2,y,n)
lima[r,2]=qbeta(1-alfa/2,y,n)
r=r+1
}
}
alfa=0.1
n <- seq(2,10)
lims<- matrix(NA, nrow=sum(n)+2, ncol = 2)
r=1
for(n in 2:30){
for(y in 0:n){
lims[r,1]=qbeta(alfa/2,y,n)
lims[r,2]=qbeta(1-alfa/2,y,n)
r=r+1
}
}
qbeta(alfa/2,y,n)
alfa=0.1
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+2, ncol = 4)
n <- c(); y <- c()
r=1
for(n in 2:30){
for(y in 0:n){
n[r]=n
y[r]=y
lims[r,1]=qbeta(alfa/2,y,n)
lims[r,2]=qbeta(1-alfa/2,y,n)
r=r+1
}
}
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(n in 2:30){
for(y in 0:n){
n[r]=n
y[r]=y
lims[r,1]=qbeta(alfa/2,y,n)
lims[r,2]=qbeta(1-alfa/2,y,n)
r=r+1
}
}
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
alfa=0.1
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
alfa=0.1
i <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,y,n)
lims[r,2]=qbeta(1-alfa/2,y,n)
r=r+1
}
}
qbeta(alfa/2,y,n)
qbeta(1-alfa/2,y,n)
alfa=0.1
i <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j)
lims[r,2]=qbeta(1-alfa/2,j,i-j)
r=r+1
}
}
qbeta(alfa/2,j,i-j)
qbeta(1-alfa/2,j,i-j)
qbeta(1-alfa/2,j+1,i-j)
alfa=0.1
i <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
lims<- matrix(NA, nrow=sum(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
Table <- data.frame(n=n,y=y,LimInf=lims[,1], LimSup=lims[,2])
Table
table <- data.frame(n=n,y=y,LimInf=lims[,1], LimSup=lims[,2])
head(table)
table <- data.frame(n=n,y=y,LimInf=lims[,1]|>round(3), LimSup=lims[,2]|>round(3))
head(table)
table
for (t in 2:30){
for(z in 1:t){
n[t] <- ""
}}
table <- data.frame(n=n,y=y,LimInf=lims[,1]|>round(3), LimSup=lims[,2]|>round(3))
head(table)
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
alfa=0.1
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
for (t in 2:30){
for(z in 1:t){
n[z] <- ""
}}
table <- data.frame(n=n,y=y,LimInf=lims[,1]|>round(3), LimSup=lims[,2]|>round(3))
head(table)
alfa=0.1
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
for (t in 2:30){
for(z in 2:t){
n[z] <- ""
}}
table <- data.frame(n=n,y=y,LimInf=lims[,1]|>round(3), LimSup=lims[,2]|>round(3))
head(table)
table
alfa=0.1
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
for (t in seq(2,30, by=length(t))){
n[t+1] <- ""
}
table <- data.frame(n=n,y=y,LimInf=lims[,1]|>round(3), LimSup=lims[,2]|>round(3))
head(table)
alfa=0.1
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
for (t in seq(2,30, by=length(t))){
n[t] <- ""
}
table <- data.frame(n=n,y=y,LimInf=lims[,1]|>round(3), LimSup=lims[,2]|>round(3))
head(table)
alfa=0.1
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
for (t in seq(2,30, by=length(t)+1)){
n[t] <- ""
}
table <- data.frame(n=n,y=y,LimInf=lims[,1]|>round(3), LimSup=lims[,2]|>round(3))
head(table)
alfa=0.1
n <- seq(2,30)
lims<- matrix(NA, nrow=sum(n)+length(n), ncol = 4)
n <- c(); y <- c()
r=1
for(i in 2:30){
for(j in 0:i){
n[r]=i
y[r]=j
lims[r,1]=qbeta(alfa/2,j,i-j+1)
lims[r,2]=qbeta(1-alfa/2,j+1,i-j)
r=r+1
}
}
for (t in seq(2,30, by=length(t)+2)){
n[t] <- ""
}
table <- data.frame(n=n,y=y,LimInf=lims[,1]|>round(3), LimSup=lims[,2]|>round(3))
head(table)
